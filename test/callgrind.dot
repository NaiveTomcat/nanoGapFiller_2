digraph {
	graph [fontname=Arial, nodesep=0.125, ranksep=0.25];
	node [fontcolor=white, fontname=Arial, height=0, shape=box, style=filled, width=0];
	edge [fontname=Arial];
	"(below main)" [color="#ff0000", fontcolor="#ffffff", fontsize="10.00", label="libc-2.33.so\n(below main)\n99.98%\n(0.00%)\n1×"];
	"(below main)" -> main [arrowsize="1.00", color="#fe0500", fontcolor="#fe0500", fontsize="10.00", label="99.57%\n1×", labeldistance="3.98", penwidth="3.98"];
	"0x0000000000001090" [color="#ff0000", fontcolor="#ffffff", fontsize="10.00", label="ld-2.33.so\n0x0000000000001090\n100.00%\n(0.00%)\n0×"];
	"0x0000000000001090" -> "_start" [arrowsize="1.00", color="#ff0000", fontcolor="#ff0000", fontsize="10.00", label="99.98%\n1×", labeldistance="4.00", penwidth="4.00"];
	"Contig::get_first_site[abi:cxx11](int, int, int)" [color="#0c9787", fontcolor="#ffffff", fontsize="10.00", label="test.out\nContig::get_first_site[abi:cxx11](int, int, int)\n27.95%\n(0.20%)\n184×"];
	"Contig::get_first_site[abi:cxx11](int, int, int)" -> "Contig::get_first_site[abi:cxx11](int, int, int)'2" [arrowsize="0.52", color="#0c9789", fontcolor="#0c9789", fontsize="10.00", label="27.55%\n250×", labeldistance="1.10", penwidth="1.10"];
	"Contig::get_first_site[abi:cxx11](int, int, int)" -> "void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)" [arrowsize="0.35", color="#0d0d73", fontcolor="#0d0d73", fontsize="10.00", label="0.14%\n14895×", labeldistance="0.50", penwidth="0.50"];
	"Contig::get_first_site[abi:cxx11](int, int, int)'2" [color="#0c9789", fontcolor="#ffffff", fontsize="10.00", label="test.out\nContig::get_first_site[abi:cxx11](int, int, int)'2\n27.55%\n(11.42%)\n2022011×"];
	"Contig::get_first_site[abi:cxx11](int, int, int)'2" -> "Contig::get_first_site[abi:cxx11](int, int, int)'2" [arrowsize="0.52", color="#0c9789", fontcolor="#0c9789", fontsize="10.00", label="2021761×", labeldistance="1.10", penwidth="1.10"];
	"Contig::get_first_site[abi:cxx11](int, int, int)'2" -> "__memcpy_avx_unaligned_erms" [arrowsize="0.35", color="#0d1575", fontcolor="#0d1575", fontsize="10.00", label="2.06%\n20040163×", labeldistance="0.50", penwidth="0.50"];
	"Contig::get_first_site[abi:cxx11](int, int, int)'2" -> "operator delete(void*, unsigned long)" [arrowsize="0.35", color="#0d1475", fontcolor="#0d1475", fontsize="10.00", label="1.77%\n2640746×", labeldistance="0.50", penwidth="0.50"];
	"Contig::get_first_site[abi:cxx11](int, int, int)'2" -> "operator new(unsigned long)" [arrowsize="0.35", color="#0d1475", fontcolor="#0d1475", fontsize="10.00", label="1.65%\n3079743×", labeldistance="0.50", penwidth="0.50"];
	"Contig::get_first_site[abi:cxx11](int, int, int)'2" -> "void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)" [arrowsize="0.35", color="#0d3e80", fontcolor="#0d3e80", fontsize="10.00", label="10.65%\n2617936×", labeldistance="0.50", penwidth="0.50"];
	"__memchr_avx2" [color="#0d1074", fontcolor="#ffffff", fontsize="10.00", label="libc-2.33.so\n__memchr_avx2\n0.72%\n(0.72%)\n4820961×"];
	"__memcmp_avx2_movbe" [color="#0d1074", fontcolor="#ffffff", fontsize="10.00", label="libc-2.33.so\n__memcmp_avx2_movbe\n0.76%\n(0.76%)\n4812100×"];
	"__memcpy_avx_unaligned_erms" [color="#0d4983", fontcolor="#ffffff", fontsize="10.00", label="libc-2.33.so\n__memcpy_avx_unaligned_erms\n12.72%\n(12.72%)\n115834185×"];
	"_int_free" [color="#0d1c77", fontcolor="#ffffff", fontsize="10.00", label="libc-2.33.so\n_int_free\n3.52%\n(3.41%)\n6605947×"];
	"_int_malloc" [color="#0d267a", fontcolor="#ffffff", fontsize="10.00", label="libc-2.33.so\n_int_malloc\n5.70%\n(5.30%)\n2955436×"];
	"_start" [color="#ff0000", fontcolor="#ffffff", fontsize="10.00", label="test.out\n_start\n99.98%\n(0.00%)\n1×"];
	"_start" -> "(below main)" [arrowsize="1.00", color="#ff0000", fontcolor="#ff0000", fontsize="10.00", label="99.98%\n1×", labeldistance="4.00", penwidth="4.00"];
	"connect_between_contigs(int)" [color="#0ab412", fontcolor="#ffffff", fontsize="10.00", label="test.out\nconnect_between_contigs(int)\n48.79%\n(11.53%)\n1×"];
	"connect_between_contigs(int)" -> "Contig::get_first_site[abi:cxx11](int, int, int)" [arrowsize="0.53", color="#0c9787", fontcolor="#0c9787", fontsize="10.00", label="27.95%\n184×", labeldistance="1.12", penwidth="1.12"];
	"connect_between_contigs(int)" -> "__memcpy_avx_unaligned_erms" [arrowsize="0.35", color="#0d2078", fontcolor="#0d2078", fontsize="10.00", label="4.48%\n43561982×", labeldistance="0.50", penwidth="0.50"];
	"connect_between_contigs(int)" -> "operator delete(void*, unsigned long)" [arrowsize="0.35", color="#0d1074", fontcolor="#0d1074", fontsize="10.00", label="0.87%\n877716×", labeldistance="0.50", penwidth="0.50"];
	"connect_between_contigs(int)" -> "operator new(unsigned long)" [arrowsize="0.35", color="#0d1876", fontcolor="#0d1876", fontsize="10.00", label="2.72%\n1316298×", labeldistance="0.50", penwidth="0.50"];
	"connect_between_contigs(int)" -> "std::pair<std::__detail::_Node_iterator<Edge*, true, false>, bool> std::_Hashtable<Edge*, Edge*, std::allocator<Edge*>, std::__detail::_Identity, std::equal_to<Edge*>, std::hash<Edge*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert<Edge* const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<Edge*, false> > > >(Edge* const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<Edge*, false> > > const&, std::integral_constant<bool, true>) [clone .constprop.0] [clone .isra.0]" [arrowsize="0.35", color="#0d1274", fontcolor="#0d1274", fontsize="10.00", label="1.22%\n438766×", labeldistance="0.50", penwidth="0.50"];
	"construct_assembly_graph(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int)" [color="#0d1876", fontcolor="#ffffff", fontsize="10.00", label="test.out\nconstruct_assembly_graph(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int)\n2.72%\n(0.03%)\n1×"];
	"construct_assembly_graph(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int)" -> "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::find(char const*, unsigned long, unsigned long) const" [arrowsize="0.35", color="#0d1575", fontcolor="#0d1575", fontsize="10.00", label="2.02%\n2826×", labeldistance="0.50", penwidth="0.50"];
	"export_sitegraph[abi:cxx11]()" [color="#0ab317", fontcolor="#ffffff", fontsize="10.00", label="test.out\nexport_sitegraph[abi:cxx11]()\n48.05%\n(2.35%)\n1×"];
	"export_sitegraph[abi:cxx11]()" -> "std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)" [arrowsize="0.65", color="#0aab3b", fontcolor="#0aab3b", fontsize="10.00", label="42.40%\n47520780×", labeldistance="1.70", penwidth="1.70"];
	"export_sitegraph[abi:cxx11]()" -> "std::ostream& std::ostream::_M_insert<long>(long)" [arrowsize="0.35", color="#0d1174", fontcolor="#0d1174", fontsize="10.00", label="1.00%\n439948×", labeldistance="0.50", penwidth="0.50"];
	"export_sitegraph[abi:cxx11]()" -> "std::ostream::operator<<(int)" [arrowsize="0.35", color="#0d1575", fontcolor="#0d1575", fontsize="10.00", label="1.90%\n879896×", labeldistance="0.50", penwidth="0.50"];
	free [color="#0d2279", fontcolor="#ffffff", fontsize="10.00", label="libc-2.33.so\nfree\n4.83%\n(1.31%)\n6605198×"];
	free -> "_int_free" [arrowsize="0.35", color="#0d1c77", fontcolor="#0d1c77", fontsize="10.00", label="3.52%\n6605181×", labeldistance="0.50", penwidth="0.50"];
	"int std::__int_to_char<char, unsigned long>(char*, unsigned long, char const*, std::_Ios_Fmtflags, bool)" [color="#0d0f73", fontcolor="#ffffff", fontsize="10.00", label="libstdc++.so.6.0.29\nint std::__int_to_char<char, unsigned long>(char*, unsigned long, char const*, std::_Ios_Fmtflags, bool)\n0.55%\n(0.55%)\n1320582×"];
	main [color="#fe0500", fontcolor="#ffffff", fontsize="10.00", label="test.out\nmain\n99.57%\n(0.00%)\n1×"];
	main -> "connect_between_contigs(int)" [arrowsize="0.70", color="#0ab412", fontcolor="#0ab412", fontsize="10.00", label="48.79%\n1×", labeldistance="1.95", penwidth="1.95"];
	main -> "construct_assembly_graph(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int)" [arrowsize="0.35", color="#0d1876", fontcolor="#0d1876", fontsize="10.00", label="2.72%\n1×", labeldistance="0.50", penwidth="0.50"];
	main -> "export_sitegraph[abi:cxx11]()" [arrowsize="0.69", color="#0ab317", fontcolor="#0ab317", fontsize="10.00", label="48.05%\n1×", labeldistance="1.92", penwidth="1.92"];
	malloc [color="#0d317d", fontcolor="#ffffff", fontsize="10.00", label="libc-2.33.so\nmalloc\n8.01%\n(2.31%)\n7489740×"];
	malloc -> "_int_malloc" [arrowsize="0.35", color="#0d267a", fontcolor="#0d267a", fontsize="10.00", label="5.70%\n2955434×", labeldistance="0.50", penwidth="0.50"];
	"operator delete(void*)" [color="#0d2279", fontcolor="#ffffff", fontsize="10.00", label="libstdc++.so.6.0.29\noperator delete(void*)\n4.92%\n(0.09%)\n6605195×"];
	"operator delete(void*)" -> free [arrowsize="0.35", color="#0d2279", fontcolor="#0d2279", fontsize="10.00", label="4.83%\n6605195×", labeldistance="0.50", penwidth="0.50"];
	"operator delete(void*, unsigned long)" [color="#0d2279", fontcolor="#ffffff", fontsize="10.00", label="libstdc++.so.6.0.29\noperator delete(void*, unsigned long)\n5.01%\n(0.09%)\n6602295×"];
	"operator delete(void*, unsigned long)" -> "operator delete(void*)" [arrowsize="0.35", color="#0d2279", fontcolor="#0d2279", fontsize="10.00", label="4.92%\n6602295×", labeldistance="0.50", penwidth="0.50"];
	"operator new(unsigned long)" [color="#0d347e", fontcolor="#ffffff", fontsize="10.00", label="libstdc++.so.6.0.29\noperator new(unsigned long)\n8.63%\n(0.62%)\n7489735×"];
	"operator new(unsigned long)" -> malloc [arrowsize="0.35", color="#0d317d", fontcolor="#0d317d", fontsize="10.00", label="8.01%\n7489735×", labeldistance="0.50", penwidth="0.50"];
	"std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::find(char const*, unsigned long, unsigned long) const" [color="#0d1575", fontcolor="#ffffff", fontsize="10.00", label="libstdc++.so.6.0.29\nstd::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::find(char const*, unsigned long, unsigned long) const\n2.02%\n(0.61%)\n2826×"];
	"std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::find(char const*, unsigned long, unsigned long) const" -> "__memchr_avx2" [arrowsize="0.35", color="#0d1074", fontcolor="#0d1074", fontsize="10.00", label="0.68%\n4657818×", labeldistance="0.50", penwidth="0.50"];
	"std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::find(char const*, unsigned long, unsigned long) const" -> "__memcmp_avx2_movbe" [arrowsize="0.35", color="#0d1074", fontcolor="#0d1074", fontsize="10.00", label="0.73%\n4656662×", labeldistance="0.50", penwidth="0.50"];
	"std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)" [color="#0aab3b", fontcolor="#ffffff", fontsize="10.00", label="libstdc++.so.6.0.29\nstd::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)\n42.40%\n(18.22%)\n47522262×"];
	"std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)" -> "std::basic_streambuf<char, std::char_traits<char> >::xsputn(char const*, long)" [arrowsize="0.41", color="#0c5f88", fontcolor="#0c5f88", fontsize="10.00", label="16.69%\n47520780×", labeldistance="0.67", penwidth="0.67"];
	"std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)" -> "std::ostream::sentry::sentry(std::ostream&)" [arrowsize="0.35", color="#0d2e7c", fontcolor="#0d2e7c", fontsize="10.00", label="7.48%\n47522262×", labeldistance="0.50", penwidth="0.50"];
	"std::basic_streambuf<char, std::char_traits<char> >::xsputn(char const*, long)" [color="#0c6289", fontcolor="#ffffff", fontsize="10.00", label="libstdc++.so.6.0.29\nstd::basic_streambuf<char, std::char_traits<char> >::xsputn(char const*, long)\n17.15%\n(11.71%)\n48842838×"];
	"std::basic_streambuf<char, std::char_traits<char> >::xsputn(char const*, long)" -> "__memcpy_avx_unaligned_erms" [arrowsize="0.35", color="#0d2379", fontcolor="#0d2379", fontsize="10.00", label="5.20%\n48842849×", labeldistance="0.50", penwidth="0.50"];
	"std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::do_put(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, long) const" [color="#0d1675", fontcolor="#ffffff", fontsize="10.00", label="libstdc++.so.6.0.29\nstd::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::do_put(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, long) const\n2.11%\n(0.03%)\n1319845×"];
	"std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::do_put(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, long) const" -> "std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, long) const" [arrowsize="0.35", color="#0d1575", fontcolor="#0d1575", fontsize="10.00", label="2.08%\n1319845×", labeldistance="0.50", penwidth="0.50"];
	"std::ostream& std::ostream::_M_insert<long>(long)" [color="#0d1976", fontcolor="#ffffff", fontsize="10.00", label="libstdc++.so.6.0.29\nstd::ostream& std::ostream::_M_insert<long>(long)\n2.83%\n(0.52%)\n1319845×"];
	"std::ostream& std::ostream::_M_insert<long>(long)" -> "std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::do_put(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, long) const" [arrowsize="0.35", color="#0d1675", fontcolor="#0d1675", fontsize="10.00", label="2.11%\n1319845×", labeldistance="0.50", penwidth="0.50"];
	"std::ostream& std::ostream::_M_insert<long>(long)" -> "std::ostream::sentry::sentry(std::ostream&)" [arrowsize="0.35", color="#0d0e73", fontcolor="#0d0e73", fontsize="10.00", label="0.21%\n1319845×", labeldistance="0.50", penwidth="0.50"];
	"std::ostream::operator<<(int)" [color="#0d1575", fontcolor="#ffffff", fontsize="10.00", label="libstdc++.so.6.0.29\nstd::ostream::operator<<(int)\n1.90%\n(0.07%)\n879896×"];
	"std::ostream::operator<<(int)" -> "std::ostream& std::ostream::_M_insert<long>(long)" [arrowsize="0.35", color="#0d1475", fontcolor="#0d1475", fontsize="10.00", label="1.83%\n879896×", labeldistance="0.50", penwidth="0.50"];
	"std::ostream::sentry::sentry(std::ostream&)" [color="#0d2f7d", fontcolor="#ffffff", fontsize="10.00", label="libstdc++.so.6.0.29\nstd::ostream::sentry::sentry(std::ostream&)\n7.76%\n(7.76%)\n49283544×"];
	"std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, long) const" [color="#0d1575", fontcolor="#ffffff", fontsize="10.00", label="libstdc++.so.6.0.29\nstd::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, long) const\n2.08%\n(0.82%)\n1319845×"];
	"std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, long) const" -> "int std::__int_to_char<char, unsigned long>(char*, unsigned long, char const*, std::_Ios_Fmtflags, bool)" [arrowsize="0.35", color="#0d0f73", fontcolor="#0d0f73", fontsize="10.00", label="0.55%\n1319845×", labeldistance="0.50", penwidth="0.50"];
	"std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, long) const" -> "std::basic_streambuf<char, std::char_traits<char> >::xsputn(char const*, long)" [arrowsize="0.35", color="#0d0f73", fontcolor="#0d0f73", fontsize="10.00", label="0.46%\n1319844×", labeldistance="0.50", penwidth="0.50"];
	"std::pair<std::__detail::_Node_iterator<Edge*, true, false>, bool> std::_Hashtable<Edge*, Edge*, std::allocator<Edge*>, std::__detail::_Identity, std::equal_to<Edge*>, std::hash<Edge*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert<Edge* const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<Edge*, false> > > >(Edge* const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<Edge*, false> > > const&, std::integral_constant<bool, true>) [clone .constprop.0] [clone .isra.0]" [color="#0d1274", fontcolor="#ffffff", fontsize="10.00", label="test.out\nstd::pair<std::__detail::_Node_iterator<Edge*, true, false>, bool> std::_Hashtable<Edge*, Edge*, std::allocator<Edge*>, std::__detail::_Identity, std::equal_to<Edge*>, std::hash<Edge*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert<Edge* const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<Edge*, false> > > >(Edge* const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<Edge*, false> > > const&, std::integral_constant<bool, true>) [clone .constprop.0] [clone .isra.0]\n1.22%\n(0.22%)\n439948×"];
	"std::pair<std::__detail::_Node_iterator<Edge*, true, false>, bool> std::_Hashtable<Edge*, Edge*, std::allocator<Edge*>, std::__detail::_Identity, std::equal_to<Edge*>, std::hash<Edge*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert<Edge* const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<Edge*, false> > > >(Edge* const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<Edge*, false> > > const&, std::integral_constant<bool, true>) [clone .constprop.0] [clone .isra.0]" -> "operator new(unsigned long)" [arrowsize="0.35", color="#0d1074", fontcolor="#0d1074", fontsize="10.00", label="0.80%\n439948×", labeldistance="0.50", penwidth="0.50"];
	"void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)" [color="#0d3f81", fontcolor="#ffffff", fontsize="10.00", label="test.out\nvoid std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)\n10.79%\n(5.08%)\n2633830×"];
	"void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)" -> "__memcpy_avx_unaligned_erms" [arrowsize="0.35", color="#0d0e73", fontcolor="#0d0e73", fontsize="10.00", label="0.27%\n2633827×", labeldistance="0.50", penwidth="0.50"];
	"void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)" -> "operator delete(void*, unsigned long)" [arrowsize="0.35", color="#0d1575", fontcolor="#0d1575", fontsize="10.00", label="2.01%\n2633095×", labeldistance="0.50", penwidth="0.50"];
	"void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)" -> "operator new(unsigned long)" [arrowsize="0.35", color="#0d1b77", fontcolor="#0d1b77", fontsize="10.00", label="3.44%\n2633830×", labeldistance="0.50", penwidth="0.50"];
}
