digraph {
	graph [fontname=Arial, nodesep=0.125, ranksep=0.25];
	node [fontcolor=white, fontname=Arial, height=0, shape=box, style=filled, width=0];
	edge [fontname=Arial];
	"(below main)" [color="#ff0000", fontcolor="#ffffff", fontsize="10.00", label="libc-2.33.so\n(below main)\n99.98%\n(0.00%)\n1×"];
	"(below main)" -> main [arrowsize="1.00", color="#fe0400", fontcolor="#fe0400", fontsize="10.00", label="99.57%\n1×", labeldistance="3.98", penwidth="3.98"];
	"0x0000000000001090" [color="#ff0000", fontcolor="#ffffff", fontsize="10.00", label="ld-2.33.so\n0x0000000000001090\n100.00%\n(0.00%)\n0×"];
	"0x0000000000001090" -> "_start" [arrowsize="1.00", color="#ff0000", fontcolor="#ff0000", fontsize="10.00", label="99.98%\n1×", labeldistance="4.00", penwidth="4.00"];
	"Contig::get_first_site[abi:cxx11](int, Contig*, int, int, int)" [color="#0c9885", fontcolor="#ffffff", fontsize="10.00", label="test.out\nContig::get_first_site[abi:cxx11](int, Contig*, int, int, int)\n28.36%\n(0.21%)\n184×"];
	"Contig::get_first_site[abi:cxx11](int, Contig*, int, int, int)" -> "Contig::get_first_site[abi:cxx11](int, Contig*, int, int, int)'2" [arrowsize="0.53", color="#0c9787", fontcolor="#0c9787", fontsize="10.00", label="27.95%\n250×", labeldistance="1.12", penwidth="1.12"];
	"Contig::get_first_site[abi:cxx11](int, Contig*, int, int, int)" -> "void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)" [arrowsize="0.35", color="#0d0d73", fontcolor="#0d0d73", fontsize="10.00", label="0.14%\n14895×", labeldistance="0.50", penwidth="0.50"];
	"Contig::get_first_site[abi:cxx11](int, Contig*, int, int, int)'2" [color="#0c9787", fontcolor="#ffffff", fontsize="10.00", label="test.out\nContig::get_first_site[abi:cxx11](int, Contig*, int, int, int)'2\n27.95%\n(12.05%)\n2022011×"];
	"Contig::get_first_site[abi:cxx11](int, Contig*, int, int, int)'2" -> "Contig::get_first_site[abi:cxx11](int, Contig*, int, int, int)'2" [arrowsize="0.53", color="#0c9787", fontcolor="#0c9787", fontsize="10.00", label="2021761×", labeldistance="1.12", penwidth="1.12"];
	"Contig::get_first_site[abi:cxx11](int, Contig*, int, int, int)'2" -> "__memcpy_avx_unaligned_erms" [arrowsize="0.35", color="#0d1575", fontcolor="#0d1575", fontsize="10.00", label="2.03%\n20040163×", labeldistance="0.50", penwidth="0.50"];
	"Contig::get_first_site[abi:cxx11](int, Contig*, int, int, int)'2" -> "operator delete(void*, unsigned long)" [arrowsize="0.35", color="#0d1475", fontcolor="#0d1475", fontsize="10.00", label="1.74%\n2640746×", labeldistance="0.50", penwidth="0.50"];
	"Contig::get_first_site[abi:cxx11](int, Contig*, int, int, int)'2" -> "operator new(unsigned long)" [arrowsize="0.35", color="#0d1475", fontcolor="#0d1475", fontsize="10.00", label="1.63%\n3079743×", labeldistance="0.50", penwidth="0.50"];
	"Contig::get_first_site[abi:cxx11](int, Contig*, int, int, int)'2" -> "void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)" [arrowsize="0.35", color="#0d3d80", fontcolor="#0d3d80", fontsize="10.00", label="10.50%\n2617936×", labeldistance="0.50", penwidth="0.50"];
	"__memchr_avx2" [color="#0d1074", fontcolor="#ffffff", fontsize="10.00", label="libc-2.33.so\n__memchr_avx2\n0.71%\n(0.71%)\n4820961×"];
	"__memcmp_avx2_movbe" [color="#0d1074", fontcolor="#ffffff", fontsize="10.00", label="libc-2.33.so\n__memcmp_avx2_movbe\n0.75%\n(0.75%)\n4812100×"];
	"__memcpy_avx_unaligned_erms" [color="#0d4883", fontcolor="#ffffff", fontsize="10.00", label="libc-2.33.so\n__memcpy_avx_unaligned_erms\n12.53%\n(12.53%)\n115832032×"];
	"_int_free" [color="#0d1c77", fontcolor="#ffffff", fontsize="10.00", label="libc-2.33.so\n_int_free\n3.47%\n(3.36%)\n6606494×"];
	"_int_malloc" [color="#0d257a", fontcolor="#ffffff", fontsize="10.00", label="libc-2.33.so\n_int_malloc\n5.63%\n(5.23%)\n2947968×"];
	"_start" [color="#ff0000", fontcolor="#ffffff", fontsize="10.00", label="test.out\n_start\n99.98%\n(0.00%)\n1×"];
	"_start" -> "(below main)" [arrowsize="1.00", color="#ff0000", fontcolor="#ff0000", fontsize="10.00", label="99.98%\n1×", labeldistance="4.00", penwidth="4.00"];
	"connect_between_contigs(int, long)" [color="#0ab50d", fontcolor="#ffffff", fontsize="10.00", label="test.out\nconnect_between_contigs(int, long)\n49.52%\n(11.99%)\n1×"];
	"connect_between_contigs(int, long)" -> "Contig::get_first_site[abi:cxx11](int, Contig*, int, int, int)" [arrowsize="0.53", color="#0c9885", fontcolor="#0c9885", fontsize="10.00", label="28.36%\n184×", labeldistance="1.13", penwidth="1.13"];
	"connect_between_contigs(int, long)" -> "__memcpy_avx_unaligned_erms" [arrowsize="0.35", color="#0d2078", fontcolor="#0d2078", fontsize="10.00", label="4.41%\n43561982×", labeldistance="0.50", penwidth="0.50"];
	"connect_between_contigs(int, long)" -> "operator delete(void*, unsigned long)" [arrowsize="0.35", color="#0d1074", fontcolor="#0d1074", fontsize="10.00", label="0.86%\n877716×", labeldistance="0.50", penwidth="0.50"];
	"connect_between_contigs(int, long)" -> "operator new(unsigned long)" [arrowsize="0.35", color="#0d1876", fontcolor="#0d1876", fontsize="10.00", label="2.68%\n1316298×", labeldistance="0.50", penwidth="0.50"];
	"connect_between_contigs(int, long)" -> "std::pair<std::__detail::_Node_iterator<Edge*, true, false>, bool> std::_Hashtable<Edge*, Edge*, std::allocator<Edge*>, std::__detail::_Identity, std::equal_to<Edge*>, std::hash<Edge*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert<Edge* const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<Edge*, false> > > >(Edge* const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<Edge*, false> > > const&, std::integral_constant<bool, true>) [clone .constprop.0] [clone .isra.0]" [arrowsize="0.35", color="#0d1274", fontcolor="#0d1274", fontsize="10.00", label="1.20%\n438766×", labeldistance="0.50", penwidth="0.50"];
	"construct_assembly_graph(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int const&)" [color="#0d1876", fontcolor="#ffffff", fontsize="10.00", label="test.out\nconstruct_assembly_graph(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int const&)\n2.68%\n(0.03%)\n1×"];
	"construct_assembly_graph(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int const&)" -> "__memcpy_avx_unaligned_erms" [arrowsize="0.35", color="#0d0d73", fontcolor="#0d0d73", fontsize="10.00", label="0.12%\n10739×", labeldistance="0.50", penwidth="0.50"];
	"construct_assembly_graph(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int const&)" -> "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::find(char const*, unsigned long, unsigned long) const" [arrowsize="0.35", color="#0d1575", fontcolor="#0d1575", fontsize="10.00", label="1.99%\n2826×", labeldistance="0.50", penwidth="0.50"];
	"export_sitegraph[abi:cxx11]()" [color="#0ab21c", fontcolor="#ffffff", fontsize="10.00", label="test.out\nexport_sitegraph[abi:cxx11]()\n47.37%\n(2.32%)\n1×"];
	"export_sitegraph[abi:cxx11]()" -> "std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)" [arrowsize="0.65", color="#0baa3f", fontcolor="#0baa3f", fontsize="10.00", label="41.80%\n47520780×", labeldistance="1.67", penwidth="1.67"];
	"export_sitegraph[abi:cxx11]()" -> "std::ostream& std::ostream::_M_insert<long>(long)" [arrowsize="0.35", color="#0d1174", fontcolor="#0d1174", fontsize="10.00", label="0.98%\n439948×", labeldistance="0.50", penwidth="0.50"];
	"export_sitegraph[abi:cxx11]()" -> "std::ostream::operator<<(int)" [arrowsize="0.35", color="#0d1575", fontcolor="#0d1575", fontsize="10.00", label="1.87%\n879896×", labeldistance="0.50", penwidth="0.50"];
	free [color="#0d2179", fontcolor="#ffffff", fontsize="10.00", label="libc-2.33.so\nfree\n4.76%\n(1.29%)\n6605755×"];
	free -> "_int_free" [arrowsize="0.35", color="#0d1c77", fontcolor="#0d1c77", fontsize="10.00", label="3.47%\n6605726×", labeldistance="0.50", penwidth="0.50"];
	"int std::__int_to_char<char, unsigned long>(char*, unsigned long, char const*, std::_Ios_Fmtflags, bool)" [color="#0d0f73", fontcolor="#ffffff", fontsize="10.00", label="libstdc++.so.6.0.29\nint std::__int_to_char<char, unsigned long>(char*, unsigned long, char const*, std::_Ios_Fmtflags, bool)\n0.54%\n(0.54%)\n1319849×"];
	main [color="#fe0400", fontcolor="#ffffff", fontsize="10.00", label="test.out\nmain\n99.57%\n(0.00%)\n1×"];
	main -> "connect_between_contigs(int, long)" [arrowsize="0.70", color="#0ab50d", fontcolor="#0ab50d", fontsize="10.00", label="49.52%\n1×", labeldistance="1.98", penwidth="1.98"];
	main -> "construct_assembly_graph(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int const&)" [arrowsize="0.35", color="#0d1876", fontcolor="#0d1876", fontsize="10.00", label="2.68%\n1×", labeldistance="0.50", penwidth="0.50"];
	main -> "export_sitegraph[abi:cxx11]()" [arrowsize="0.69", color="#0ab21c", fontcolor="#0ab21c", fontsize="10.00", label="47.37%\n1×", labeldistance="1.89", penwidth="1.89"];
	malloc [color="#0d307d", fontcolor="#ffffff", fontsize="10.00", label="libc-2.33.so\nmalloc\n7.90%\n(2.28%)\n7490297×"];
	malloc -> "_int_malloc" [arrowsize="0.35", color="#0d257a", fontcolor="#0d257a", fontsize="10.00", label="5.63%\n2947966×", labeldistance="0.50", penwidth="0.50"];
	"operator delete(void*)" [color="#0d2279", fontcolor="#ffffff", fontsize="10.00", label="libstdc++.so.6.0.29\noperator delete(void*)\n4.85%\n(0.09%)\n6605753×"];
	"operator delete(void*)" -> free [arrowsize="0.35", color="#0d2179", fontcolor="#0d2179", fontsize="10.00", label="4.76%\n6605753×", labeldistance="0.50", penwidth="0.50"];
	"operator delete(void*, unsigned long)" [color="#0d2279", fontcolor="#ffffff", fontsize="10.00", label="libstdc++.so.6.0.29\noperator delete(void*, unsigned long)\n4.94%\n(0.09%)\n6602854×"];
	"operator delete(void*, unsigned long)" -> "operator delete(void*)" [arrowsize="0.35", color="#0d2279", fontcolor="#0d2279", fontsize="10.00", label="4.85%\n6602854×", labeldistance="0.50", penwidth="0.50"];
	"operator new(unsigned long)" [color="#0d337e", fontcolor="#ffffff", fontsize="10.00", label="libstdc++.so.6.0.29\noperator new(unsigned long)\n8.51%\n(0.61%)\n7490293×"];
	"operator new(unsigned long)" -> malloc [arrowsize="0.35", color="#0d307d", fontcolor="#0d307d", fontsize="10.00", label="7.90%\n7490293×", labeldistance="0.50", penwidth="0.50"];
	"std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::find(char const*, unsigned long, unsigned long) const" [color="#0d1575", fontcolor="#ffffff", fontsize="10.00", label="libstdc++.so.6.0.29\nstd::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::find(char const*, unsigned long, unsigned long) const\n1.99%\n(0.60%)\n2826×"];
	"std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::find(char const*, unsigned long, unsigned long) const" -> "__memchr_avx2" [arrowsize="0.35", color="#0d1074", fontcolor="#0d1074", fontsize="10.00", label="0.67%\n4657818×", labeldistance="0.50", penwidth="0.50"];
	"std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::find(char const*, unsigned long, unsigned long) const" -> "__memcmp_avx2_movbe" [arrowsize="0.35", color="#0d1074", fontcolor="#0d1074", fontsize="10.00", label="0.72%\n4656662×", labeldistance="0.50", penwidth="0.50"];
	"std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)" [color="#0baa3f", fontcolor="#ffffff", fontsize="10.00", label="libstdc++.so.6.0.29\nstd::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)\n41.80%\n(17.97%)\n47520795×"];
	"std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)" -> "std::basic_streambuf<char, std::char_traits<char> >::xsputn(char const*, long)" [arrowsize="0.41", color="#0c5e88", fontcolor="#0c5e88", fontsize="10.00", label="16.46%\n47520780×", labeldistance="0.66", penwidth="0.66"];
	"std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)" -> "std::ostream::sentry::sentry(std::ostream&)" [arrowsize="0.35", color="#0d2e7c", fontcolor="#0d2e7c", fontsize="10.00", label="7.38%\n47520795×", labeldistance="0.50", penwidth="0.50"];
	"std::basic_streambuf<char, std::char_traits<char> >::xsputn(char const*, long)" [color="#0c6089", fontcolor="#ffffff", fontsize="10.00", label="libstdc++.so.6.0.29\nstd::basic_streambuf<char, std::char_traits<char> >::xsputn(char const*, long)\n16.91%\n(11.54%)\n48840636×"];
	"std::basic_streambuf<char, std::char_traits<char> >::xsputn(char const*, long)" -> "__memcpy_avx_unaligned_erms" [arrowsize="0.35", color="#0d2379", fontcolor="#0d2379", fontsize="10.00", label="5.12%\n48840643×", labeldistance="0.50", penwidth="0.50"];
	"std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::do_put(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, long) const" [color="#0d1575", fontcolor="#ffffff", fontsize="10.00", label="libstdc++.so.6.0.29\nstd::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::do_put(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, long) const\n2.08%\n(0.03%)\n1319846×"];
	"std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::do_put(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, long) const" -> "std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, long) const" [arrowsize="0.35", color="#0d1575", fontcolor="#0d1575", fontsize="10.00", label="2.05%\n1319846×", labeldistance="0.50", penwidth="0.50"];
	"std::ostream& std::ostream::_M_insert<long>(long)" [color="#0d1976", fontcolor="#ffffff", fontsize="10.00", label="libstdc++.so.6.0.29\nstd::ostream& std::ostream::_M_insert<long>(long)\n2.79%\n(0.51%)\n1319846×"];
	"std::ostream& std::ostream::_M_insert<long>(long)" -> "std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::do_put(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, long) const" [arrowsize="0.35", color="#0d1575", fontcolor="#0d1575", fontsize="10.00", label="2.08%\n1319846×", labeldistance="0.50", penwidth="0.50"];
	"std::ostream& std::ostream::_M_insert<long>(long)" -> "std::ostream::sentry::sentry(std::ostream&)" [arrowsize="0.35", color="#0d0e73", fontcolor="#0d0e73", fontsize="10.00", label="0.20%\n1319846×", labeldistance="0.50", penwidth="0.50"];
	"std::ostream::operator<<(int)" [color="#0d1575", fontcolor="#ffffff", fontsize="10.00", label="libstdc++.so.6.0.29\nstd::ostream::operator<<(int)\n1.87%\n(0.07%)\n879896×"];
	"std::ostream::operator<<(int)" -> "std::ostream& std::ostream::_M_insert<long>(long)" [arrowsize="0.35", color="#0d1475", fontcolor="#0d1475", fontsize="10.00", label="1.81%\n879896×", labeldistance="0.50", penwidth="0.50"];
	"std::ostream::sentry::sentry(std::ostream&)" [color="#0d2f7d", fontcolor="#ffffff", fontsize="10.00", label="libstdc++.so.6.0.29\nstd::ostream::sentry::sentry(std::ostream&)\n7.65%\n(7.65%)\n49281969×"];
	"std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, long) const" [color="#0d1575", fontcolor="#ffffff", fontsize="10.00", label="libstdc++.so.6.0.29\nstd::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, long) const\n2.05%\n(0.81%)\n1319846×"];
	"std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, long) const" -> "int std::__int_to_char<char, unsigned long>(char*, unsigned long, char const*, std::_Ios_Fmtflags, bool)" [arrowsize="0.35", color="#0d0f73", fontcolor="#0d0f73", fontsize="10.00", label="0.54%\n1319846×", labeldistance="0.50", penwidth="0.50"];
	"std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, long) const" -> "std::basic_streambuf<char, std::char_traits<char> >::xsputn(char const*, long)" [arrowsize="0.35", color="#0d0f73", fontcolor="#0d0f73", fontsize="10.00", label="0.45%\n1319844×", labeldistance="0.50", penwidth="0.50"];
	"std::pair<std::__detail::_Node_iterator<Edge*, true, false>, bool> std::_Hashtable<Edge*, Edge*, std::allocator<Edge*>, std::__detail::_Identity, std::equal_to<Edge*>, std::hash<Edge*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert<Edge* const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<Edge*, false> > > >(Edge* const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<Edge*, false> > > const&, std::integral_constant<bool, true>) [clone .constprop.0] [clone .isra.0]" [color="#0d1274", fontcolor="#ffffff", fontsize="10.00", label="test.out\nstd::pair<std::__detail::_Node_iterator<Edge*, true, false>, bool> std::_Hashtable<Edge*, Edge*, std::allocator<Edge*>, std::__detail::_Identity, std::equal_to<Edge*>, std::hash<Edge*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert<Edge* const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<Edge*, false> > > >(Edge* const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<Edge*, false> > > const&, std::integral_constant<bool, true>) [clone .constprop.0] [clone .isra.0]\n1.20%\n(0.22%)\n439948×"];
	"std::pair<std::__detail::_Node_iterator<Edge*, true, false>, bool> std::_Hashtable<Edge*, Edge*, std::allocator<Edge*>, std::__detail::_Identity, std::equal_to<Edge*>, std::hash<Edge*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert<Edge* const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<Edge*, false> > > >(Edge* const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<Edge*, false> > > const&, std::integral_constant<bool, true>) [clone .constprop.0] [clone .isra.0]" -> "operator new(unsigned long)" [arrowsize="0.35", color="#0d1074", fontcolor="#0d1074", fontsize="10.00", label="0.79%\n439948×", labeldistance="0.50", penwidth="0.50"];
	"void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)" [color="#0d3e80", fontcolor="#ffffff", fontsize="10.00", label="test.out\nvoid std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)\n10.64%\n(5.00%)\n2633830×"];
	"void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)" -> "__memcpy_avx_unaligned_erms" [arrowsize="0.35", color="#0d0e73", fontcolor="#0d0e73", fontsize="10.00", label="0.27%\n2633827×", labeldistance="0.50", penwidth="0.50"];
	"void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)" -> "operator delete(void*, unsigned long)" [arrowsize="0.35", color="#0d1575", fontcolor="#0d1575", fontsize="10.00", label="1.99%\n2633095×", labeldistance="0.50", penwidth="0.50"];
	"void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)" -> "operator new(unsigned long)" [arrowsize="0.35", color="#0d1b77", fontcolor="#0d1b77", fontsize="10.00", label="3.39%\n2633830×", labeldistance="0.50", penwidth="0.50"];
}
